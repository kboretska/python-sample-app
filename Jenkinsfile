pipeline {
    agent any

    environment {
        PYPI_TOKEN = credentials('PYPI_API_TOKEN')  // –û—Ç—Ä–∏–º—É—î–º–æ Test PyPI API Token –∑ Jenkins
    }

    stages {
        stage('Build and Test') {
            steps {
                echo "üõ† –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
                sh 'python3 -m venv venv'
                sh '. venv/bin/activate && pip install --upgrade pip setuptools wheel'

                echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
                sh '. venv/bin/activate && pip install .'

                echo "‚úÖ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤..."
                sh '. venv/bin/activate && pytest || true'
            }
        }

        stage('Package and Deploy') {
            steps {
                echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Python-–ø–∞–∫–µ—Ç—É..."
                sh '''
                    . venv/bin/activate
                    rm -rf dist/*
                    python setup.py sdist bdist_wheel
                '''

                echo "üöÄ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—É –Ω–∞ Test PyPI..."
                sh '''
                    . venv/bin/activate
                    pip install --upgrade twine
                    twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/* -u __token__ -p $PYPI_TOKEN
                '''
            }
        }
    }

    post {
        success {
            echo "üéâ –£—Å–ø—ñ—à–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è Pipeline!"
        }
        failure {
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ —É Pipeline. –ü–µ—Ä–µ–≤—ñ—Ä –ª–æ–≥–∏."
        }
    }
}
